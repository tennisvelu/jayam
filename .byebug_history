c
  @approve_reject_id=Company.approve_reject_report(params)
   80:     byebug
  @approve_reject_id=Company.approve_reject_report(params)
c
   c
c
inward_manufacture_detail_paramsc
inward_manufacture_detail_params
params
c
@direct_sale
c
 @damage[0]
 @damage
@warehouse_stock
c
@warehouse_stock
c
 @damage
@warehouse_stock
c
damage
c
@damage
c
damage
c
@damage
Company.super_admin(params)
company.super_admin(params)
@damage
damage
@damage
damage
c
damage
c
damage
c
@damage1
@damage
@damage1
c
@damage
c
C
@damage
c
Warehouse.ids
@warehouse_stock
Company.warehouse_stock(params)
@warehouse_stock
Company.warehouse_stock(params)
@damage
c
damage
c
damage
c
Company.super_admin(params)
@damage
c
damage
c
@damage
@damage=Company.super_admin(params)
@damage
Company.super_admin(params)
c
damage
c
damage
c
Company.warehouse_stock(params)
c
damage
c
Company.warehouse_stock(params)
Company.warehouse_stock(param)
Company.warehouse_stock(damage)
damage
c
damage
c
damage
c
@warehouse_stock
c
damage
c
damage
c
@warehouse_stock
c
damage
c
damage
c
@warehouse_stock
c
@warehouse_stock.flatten
@warehouse_stock
c
a.flatten
a,flatten
a=[[[1,2,3],[2,34,4]]]
a=[[[1,2,3]],[2,34,4]]]
@warehouse_stock.flatten
@warehouse_stock
c
params[:id]
@company
c
@company
params[:id]
params
c
 Contact.find(1)
 Contact.find(1).destroy
Contact.find(1)
Contact.find(20)
Contact.all
@user.contact_id
 Contact.find(@user.contact_id).destroy
c
@user.contact_id
@user
params
c
@damage.flatten
@damage
@damage=Company.super_admin(params)
c
params[:warehouse][:id]
params
c
params
params[:to3].present?
c
@inward_detail=Inward.where("DATE(inward_date) = ?", outward_detail.outward_date.to_date).where(:truck_number=>outward_detail.truck_number)
 @outward_detail=Outward.create(outward_params)
c
exit
outward_detail
inward_detail
exit
inward_detail
inward_details
outward_detail
outward_params
params
c
exit
@direct_sale
c
@suspence_outward
@advance_outward
@current_outward
c
params
@current_outward
c
params
parmas
parms
c
out
outoutward_id << out 
outoutward_id<<out
outoutward_id=OutwardApproval.where(:outward_id=>params[:outward_id])
out<<outward_id
outoutward_id
out+outward_id
outward_id
out
c
OutwardApproval.where(:outward_id=>@ids).pluck(:dispatch_date,:party_name,:outward_id)
@suspense_advance.count
@ids
c
OutwardApproval.where(:outward_id=>24)
@ids
c
OutwardApproval.create(:outward_id=>32,:party_name=>"dfjdsf")
OutwardApproval.create(:outward_id=>31,:party_name=>"dfjdsf")
OutwardApproval.create(:outward_id=>24,:party_name=>"dfjdsf")
OutwardApproval.create(:outward_id=>24,:party_name=>"dfjdsf").to_a
OutwardApproval.create(:outward_id=>24,:party_nmae=>"dfjdsf").to_a
OutwardApproval.new(:outward_id=>24,:party_nmae=>"dfjdsf").to_a
OutwardApproval.where(:outward_id=>24)
@ids
ids@ids
ids
OutwardApproval.where(:outward_id=>@ids)
@suspense_advance
c
User.find(session[:user_id]).warehouse_id
session[:user_id]
c
session[:user_id]
c
params
c
params
c
params[:outward_ids)
params[:outward_id)
params
c
session[:user_id]
c
OutwardApproval.where(:outward_id=>s).select(:updated_at,:party_name,:status)
OutwardApproval.find_by(:outward_id=>s).select(:updated_at,:party_name,:status)
OutwardApproval.find_by(:outward_id=>s).distinct(:updated_at,:party_name,:status)
OutwardApproval.find_by(:outward_id=>s).updated_at
OutwardApproval.find_by(:outward_id=>s).updated_at,party_name,status
OutwardApproval.find_by(:outward_id=>s).pluck(:updated_at,:party_name,:status)
OutwardApproval.where(:outward_id=>s).pluck(:updated_at,:party_name,:status)
\OutwardApproval.where(:outward_id=>s).pluck(:updated_at,:party_name,:status)
OutwardApproval.where(:outward_id=>s)
data
c
 c
c
params
c
params
c
puts s
c
puts r
r
advance_id
puts s
s
c
 role=user[0].role_id
user[0].id
 user = User.where(:user_name=>params[:user_name], :password=>params[:password])
params
c
@user
c
params
~params
c
params[:password]
c
params[:password]
params[:user_name]
params
exit
c
C
c
