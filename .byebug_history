c
params[:id].present?
params
c
params
params[:format]
c
params[:format]
params
c
k[3]
k[4]
k
k4
c
k
c
@warehouse_stock
i[0]
c
params
c
params[:warehouse_id]
params
c
params[:users][:warehouse_id]
params[:users]
params
~~params
exit
params
PARAMS
c
damage.empty?
damage
c
damage
params
c
@warehouses_session_id
Damage.where(:warehouse_id=>@warehouses_session_id)
c
Grade.find(params[:id])
c
Grade.find(params[:id])
params
c
j
j.grade
c
params[:location_ids]
params[:location_ids].empty?
params
exit
params[:location_ids].empty?
params[:location_ids]
params
c
params
c
@outward[i].quantity
damage.total_quantity
damage.last
damage
c
params["_json"][0][:bags_count]
c
params["_json"][0][:bags_count]
c
params["_json"][0][:bags_count]
c
params["_json"][0][:bags_count]
c
params["_json"][0][:bags_count]
c
params["_json"][0][:bags_count]
exit
params["_json"][0][:bags_count]
params["_json"][:bags_count]
params["_json"]["bags_count"]
params["_json"]
params
exit
inward_params
exit
inward_params
exit
inward_params
c
inward_params
c
inward_params
params
c
Stock.find(8)
Outward.last
Stock.find(8)
c
Stock.find(8)
c
Stock.find(8)
reload!
Stock.find(8)
c
data[:grade_id]
data[grade_id]
stock
c
data[:balance]
approval_id
balance
c
 @warehouse_id=OutwardApproval.find(outward_approval_id).warehouse_id
outward_approval_id=ApprovalGradeDetail.find(params["_json"][0][:id]).outward_approval_id
 count=params["_json"].count
params
c
params
c
stock
stock.book_stock
balance
c
balance
 stock
c
 stock
 stock.update(:book_stock=>book)
book=stock.book_stock-balance
balance
stock
c
approval_id.balance-data[:balance].to_i
approval_id.balance-data[:balance]
data
approval_id.balance
approval_id
c
 session[:user_id]
 session[:user_id].blank?
if not session[:user_id].blank?
c
params
OutwardApproval.find(73)
params
c
OutwardApproval.find(62)
@outward_id=OutwardApproval.find(params[:id]).update(:total_quantity=>params[:total_quantity],:total_balance=>params[:total_balance],:status=>params[:status])
params[:total_quantity]
params[:id]
params
c
OutwardApproval.find(76)
params
c
Outward.find(@outward_id)
Outward.find(@outward_id).type_of_load
@outward_id
@outward
@type_of_load
params
c
params["_json"][1][:id]
params["_json"]
params["_json"][0]
c
params["_json"][0][:id]
c
params["_json"][0][:id]
c
params["_json"][0][:id]
c
params["_json"][0][:id]
params["_json"][0][:id][0]
params["_json"][0][:id]
params["_json"][0].id
params["_json"][0].ID
params["_json"][0]
c
params["_json"][0]
exit
respond_with ApprovalGradeDetail.find(data[:id]).update(:grade_id=>data[:grade_id],:balance=>data[:balance])
ApprovalGradeDetail.find(data[:id]).update(:grade_id=>data[:grade_id],:balance=>data[:balance])
data[:grade_id]
data[:id]
data
exit
data[:grade_id]
ApprovalGradeDetail.find(data[:id]).update(:grade_id=>data[:grade_id],:balance=>data[:balance])
approval
c
params["_json"][0]
c
params["_json"][1]
params["_json"][0]
params["_json"]
params
c
@outward[i]
c
 @payment_type==0
OutwardManufactureDetail.create(params["_json"])
c
 bill_type=="1"
status=="4"
c
status=="4"
status==4
 bill_type=="1"
 bill_type==1
c
exit
params
c
params
exit
params
exit
params
c
grade
c
Grade.find(j.grade).grade_type
Grade.find(j.grade)
j.grade
j
params
c
params[:range]
c
params[:range]
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
warehouse_session_id
utwardApproval.where(:warehouse_id=>warehouse_session_id).where(:status=>[1,2,3,4,9]).where(:created_at=>"2016-12-01".."2016-12-12")>warehouse_session_id
OutwardApproval.where(:warehouse_id=>warehouse_session_id).where(:status=>[1,2,3,4,9]).where(:created_at=>params[:from].."2016-12-12")
OutwardApproval.where(:warehouse_id=>warehouse_session_id).where(:status=>[1,2,3,4,9]).where(:created_at=>params[:from]..params[:to5])
params
c
OutwardApproval.where(:warehouse_id=>warehouse_session_id).where(:status=>[1,2,3,4,9]).where(:created_at=>params[:from]..params[:to5])
